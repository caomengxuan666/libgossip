name: CMake Multi-Platform CI

on:
  push:
    branches: ["main", "master"]
  pull_request:
    branches: ["main", "master"]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release, Debug]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
            generator: "Visual Studio 17 2022"
            is_windows: true
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
            generator: "Unix Makefiles"
            is_windows: false
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
            generator: "Unix Makefiles"
            is_windows: false

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Setup Linux Dependencies
        if: matrix.is_windows == false
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake clang

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-test.txt

      - name: Configure CMake (Windows)
        if: matrix.is_windows
        shell: cmd
        run: |
          cmake -B build ^
            -G "${{ matrix.generator }}" ^
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ^
            -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} ^
            -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} ^
            -DBUILD_PYTHON_BINDINGS=ON ^
            -DBUILD_TESTS=ON

      - name: Configure CMake (Linux)
        if: matrix.is_windows == false
        shell: bash
        run: |
          cmake -B build \
            -G "${{ matrix.generator }}" \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
            -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
            -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
            -DCMAKE_CXX_FLAGS="-fPIC -fvisibility=default" \
            -DBUILD_PYTHON_BINDINGS=ON \
            -DBUILD_TESTS=ON

      - name: Build (Windows)
        if: matrix.is_windows
        shell: cmd
        run: |
          cmake --build build --config ${{ matrix.build_type }} --parallel 4

      - name: Build (Linux)
        if: matrix.is_windows == false
        shell: bash
        run: |
          cmake --build build --config ${{ matrix.build_type }} --parallel 4

      - name: Test (Windows)
        if: matrix.is_windows
        shell: cmd
        run: |
          cd build
          ctest --build-config ${{ matrix.build_type }} -V

      - name: Test (Linux)
        if: matrix.is_windows == false
        shell: bash
        run: |
          cd build
          ctest --build-config ${{ matrix.build_type }} -V